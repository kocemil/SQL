CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

-- SQL query that uses a SELECT statement to order the items by price.
SELECT *
FROM superstore 
ORDER BY price;
-- This query retrieves all columns from the superstore table and orders the result set by the price column in ascending order

-- SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.
SELECT
SUM(price) AS total_price,
AVG(price) AS average_price,
MIN(price) AS min_price,
MAX(price) AS max_price,
COUNT(price) AS total_items
FROM superstore;
 -- This query calculates the sum, average, minimum, maximum, and count of prices for all items in the superstore table

-- SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies". 
SELECT 
SUM(price) AS total_price_kitchen_supplies,
AVG(price) AS average_price_kitchen_supplies,
MIN(price) AS min_price_kitchen_supplies,
MAX(price) AS max_price_kitchen_supplies,
COUNT(price) AS total_items_kitchen_supplies
FROM superstore
WHERE category = 'Kitchen Supplies';
-- This query calculates the sum, average, minimum, maximum, and count of prices for items in the "Kitchen Supplies" category

-- How many air purifiers are in stock?
SELECT stock_quantity
FROM superstore
WHERE item_name = 'Air Purifier';
-- This query retrieves the stock quantity of air purifiers. 

-- What is the average rating of items in each category?
SELECT category,
AVG(average_rating) AS average_rating
FROM superstore
GROUP BY category;
-- This query calculates the average rating of items in each category by grouping the data by the category column and then computing the average of the average_rating column for each group. This will give us insights into which category of items generally receives higher ratings compared to others.

-- Which item has the highest price and what is its category?
SELECT item_name, category, price
FROM superstore
WHERE price = ( 
  SELECT MAX(price) FROM superstore
);
-- This query selects the item_name, category, and price of the item with the maximum price in the superstore table. We achieve this by using a subquery to find the maximum price and then filtering the main query to retrieve the item with that price. This will give us the name and category of the item with the highest price in the dataset. 
